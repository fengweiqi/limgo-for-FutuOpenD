// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Qot_GetRehab/Qot_GetRehab.proto

package Qot_GetRehab

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "limgo/futupb/Common"
import Qot_Common "limgo/futupb/Qot_Common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CompanyAct int32

const (
	CompanyAct_CompanyAct_None       CompanyAct = 0
	CompanyAct_CompanyAct_Split      CompanyAct = 1
	CompanyAct_CompanyAct_Join       CompanyAct = 2
	CompanyAct_CompanyAct_Bonus      CompanyAct = 4
	CompanyAct_CompanyAct_Transfer   CompanyAct = 8
	CompanyAct_CompanyAct_Allot      CompanyAct = 16
	CompanyAct_CompanyAct_Add        CompanyAct = 32
	CompanyAct_CompanyAct_Dividend   CompanyAct = 64
	CompanyAct_CompanyAct_SPDividend CompanyAct = 128
)

var CompanyAct_name = map[int32]string{
	0:   "CompanyAct_None",
	1:   "CompanyAct_Split",
	2:   "CompanyAct_Join",
	4:   "CompanyAct_Bonus",
	8:   "CompanyAct_Transfer",
	16:  "CompanyAct_Allot",
	32:  "CompanyAct_Add",
	64:  "CompanyAct_Dividend",
	128: "CompanyAct_SPDividend",
}
var CompanyAct_value = map[string]int32{
	"CompanyAct_None":       0,
	"CompanyAct_Split":      1,
	"CompanyAct_Join":       2,
	"CompanyAct_Bonus":      4,
	"CompanyAct_Transfer":   8,
	"CompanyAct_Allot":      16,
	"CompanyAct_Add":        32,
	"CompanyAct_Dividend":   64,
	"CompanyAct_SPDividend": 128,
}

func (x CompanyAct) Enum() *CompanyAct {
	p := new(CompanyAct)
	*p = x
	return p
}
func (x CompanyAct) String() string {
	return proto.EnumName(CompanyAct_name, int32(x))
}
func (x *CompanyAct) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CompanyAct_value, data, "CompanyAct")
	if err != nil {
		return err
	}
	*x = CompanyAct(value)
	return nil
}
func (CompanyAct) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Qot_GetRehab_026e96b263c20288, []int{0}
}

type C2S struct {
	SecurityList         []*Qot_Common.Security `protobuf:"bytes,1,rep,name=securityList" json:"securityList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *C2S) Reset()         { *m = C2S{} }
func (m *C2S) String() string { return proto.CompactTextString(m) }
func (*C2S) ProtoMessage()    {}
func (*C2S) Descriptor() ([]byte, []int) {
	return fileDescriptor_Qot_GetRehab_026e96b263c20288, []int{0}
}
func (m *C2S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2S.Unmarshal(m, b)
}
func (m *C2S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2S.Marshal(b, m, deterministic)
}
func (dst *C2S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2S.Merge(dst, src)
}
func (m *C2S) XXX_Size() int {
	return xxx_messageInfo_C2S.Size(m)
}
func (m *C2S) XXX_DiscardUnknown() {
	xxx_messageInfo_C2S.DiscardUnknown(m)
}

var xxx_messageInfo_C2S proto.InternalMessageInfo

func (m *C2S) GetSecurityList() []*Qot_Common.Security {
	if m != nil {
		return m.SecurityList
	}
	return nil
}

type Rehab struct {
	Time                 *string  `protobuf:"bytes,1,req,name=time" json:"time,omitempty"`
	CompanyActFlag       *int64   `protobuf:"varint,2,req,name=companyActFlag" json:"companyActFlag,omitempty"`
	FwdFactorA           *float64 `protobuf:"fixed64,3,req,name=fwdFactorA" json:"fwdFactorA,omitempty"`
	FwdFactorB           *float64 `protobuf:"fixed64,4,req,name=fwdFactorB" json:"fwdFactorB,omitempty"`
	BwdFactorA           *float64 `protobuf:"fixed64,5,req,name=bwdFactorA" json:"bwdFactorA,omitempty"`
	BwdFactorB           *float64 `protobuf:"fixed64,6,req,name=bwdFactorB" json:"bwdFactorB,omitempty"`
	SplitBase            *int32   `protobuf:"varint,7,opt,name=splitBase" json:"splitBase,omitempty"`
	SplitErt             *int32   `protobuf:"varint,8,opt,name=splitErt" json:"splitErt,omitempty"`
	JoinBase             *int32   `protobuf:"varint,9,opt,name=joinBase" json:"joinBase,omitempty"`
	JoinErt              *int32   `protobuf:"varint,10,opt,name=joinErt" json:"joinErt,omitempty"`
	BonusBase            *int32   `protobuf:"varint,11,opt,name=bonusBase" json:"bonusBase,omitempty"`
	BonusErt             *int32   `protobuf:"varint,12,opt,name=bonusErt" json:"bonusErt,omitempty"`
	TransferBase         *int32   `protobuf:"varint,13,opt,name=transferBase" json:"transferBase,omitempty"`
	TransferErt          *int32   `protobuf:"varint,14,opt,name=transferErt" json:"transferErt,omitempty"`
	AllotBase            *int32   `protobuf:"varint,15,opt,name=allotBase" json:"allotBase,omitempty"`
	AllotErt             *int32   `protobuf:"varint,16,opt,name=allotErt" json:"allotErt,omitempty"`
	AllotPrice           *float64 `protobuf:"fixed64,17,opt,name=allotPrice" json:"allotPrice,omitempty"`
	AddBase              *int32   `protobuf:"varint,18,opt,name=addBase" json:"addBase,omitempty"`
	AddErt               *int32   `protobuf:"varint,19,opt,name=addErt" json:"addErt,omitempty"`
	AddPrice             *float64 `protobuf:"fixed64,20,opt,name=addPrice" json:"addPrice,omitempty"`
	Dividend             *float64 `protobuf:"fixed64,21,opt,name=dividend" json:"dividend,omitempty"`
	SpDividend           *float64 `protobuf:"fixed64,22,opt,name=spDividend" json:"spDividend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rehab) Reset()         { *m = Rehab{} }
func (m *Rehab) String() string { return proto.CompactTextString(m) }
func (*Rehab) ProtoMessage()    {}
func (*Rehab) Descriptor() ([]byte, []int) {
	return fileDescriptor_Qot_GetRehab_026e96b263c20288, []int{1}
}
func (m *Rehab) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rehab.Unmarshal(m, b)
}
func (m *Rehab) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rehab.Marshal(b, m, deterministic)
}
func (dst *Rehab) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rehab.Merge(dst, src)
}
func (m *Rehab) XXX_Size() int {
	return xxx_messageInfo_Rehab.Size(m)
}
func (m *Rehab) XXX_DiscardUnknown() {
	xxx_messageInfo_Rehab.DiscardUnknown(m)
}

var xxx_messageInfo_Rehab proto.InternalMessageInfo

func (m *Rehab) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

func (m *Rehab) GetCompanyActFlag() int64 {
	if m != nil && m.CompanyActFlag != nil {
		return *m.CompanyActFlag
	}
	return 0
}

func (m *Rehab) GetFwdFactorA() float64 {
	if m != nil && m.FwdFactorA != nil {
		return *m.FwdFactorA
	}
	return 0
}

func (m *Rehab) GetFwdFactorB() float64 {
	if m != nil && m.FwdFactorB != nil {
		return *m.FwdFactorB
	}
	return 0
}

func (m *Rehab) GetBwdFactorA() float64 {
	if m != nil && m.BwdFactorA != nil {
		return *m.BwdFactorA
	}
	return 0
}

func (m *Rehab) GetBwdFactorB() float64 {
	if m != nil && m.BwdFactorB != nil {
		return *m.BwdFactorB
	}
	return 0
}

func (m *Rehab) GetSplitBase() int32 {
	if m != nil && m.SplitBase != nil {
		return *m.SplitBase
	}
	return 0
}

func (m *Rehab) GetSplitErt() int32 {
	if m != nil && m.SplitErt != nil {
		return *m.SplitErt
	}
	return 0
}

func (m *Rehab) GetJoinBase() int32 {
	if m != nil && m.JoinBase != nil {
		return *m.JoinBase
	}
	return 0
}

func (m *Rehab) GetJoinErt() int32 {
	if m != nil && m.JoinErt != nil {
		return *m.JoinErt
	}
	return 0
}

func (m *Rehab) GetBonusBase() int32 {
	if m != nil && m.BonusBase != nil {
		return *m.BonusBase
	}
	return 0
}

func (m *Rehab) GetBonusErt() int32 {
	if m != nil && m.BonusErt != nil {
		return *m.BonusErt
	}
	return 0
}

func (m *Rehab) GetTransferBase() int32 {
	if m != nil && m.TransferBase != nil {
		return *m.TransferBase
	}
	return 0
}

func (m *Rehab) GetTransferErt() int32 {
	if m != nil && m.TransferErt != nil {
		return *m.TransferErt
	}
	return 0
}

func (m *Rehab) GetAllotBase() int32 {
	if m != nil && m.AllotBase != nil {
		return *m.AllotBase
	}
	return 0
}

func (m *Rehab) GetAllotErt() int32 {
	if m != nil && m.AllotErt != nil {
		return *m.AllotErt
	}
	return 0
}

func (m *Rehab) GetAllotPrice() float64 {
	if m != nil && m.AllotPrice != nil {
		return *m.AllotPrice
	}
	return 0
}

func (m *Rehab) GetAddBase() int32 {
	if m != nil && m.AddBase != nil {
		return *m.AddBase
	}
	return 0
}

func (m *Rehab) GetAddErt() int32 {
	if m != nil && m.AddErt != nil {
		return *m.AddErt
	}
	return 0
}

func (m *Rehab) GetAddPrice() float64 {
	if m != nil && m.AddPrice != nil {
		return *m.AddPrice
	}
	return 0
}

func (m *Rehab) GetDividend() float64 {
	if m != nil && m.Dividend != nil {
		return *m.Dividend
	}
	return 0
}

func (m *Rehab) GetSpDividend() float64 {
	if m != nil && m.SpDividend != nil {
		return *m.SpDividend
	}
	return 0
}

type SecurityRehab struct {
	Security             *Qot_Common.Security `protobuf:"bytes,1,req,name=security" json:"security,omitempty"`
	RehabList            []*Rehab             `protobuf:"bytes,2,rep,name=rehabList" json:"rehabList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SecurityRehab) Reset()         { *m = SecurityRehab{} }
func (m *SecurityRehab) String() string { return proto.CompactTextString(m) }
func (*SecurityRehab) ProtoMessage()    {}
func (*SecurityRehab) Descriptor() ([]byte, []int) {
	return fileDescriptor_Qot_GetRehab_026e96b263c20288, []int{2}
}
func (m *SecurityRehab) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityRehab.Unmarshal(m, b)
}
func (m *SecurityRehab) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityRehab.Marshal(b, m, deterministic)
}
func (dst *SecurityRehab) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityRehab.Merge(dst, src)
}
func (m *SecurityRehab) XXX_Size() int {
	return xxx_messageInfo_SecurityRehab.Size(m)
}
func (m *SecurityRehab) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityRehab.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityRehab proto.InternalMessageInfo

func (m *SecurityRehab) GetSecurity() *Qot_Common.Security {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *SecurityRehab) GetRehabList() []*Rehab {
	if m != nil {
		return m.RehabList
	}
	return nil
}

type S2C struct {
	SecurityRehabList    []*SecurityRehab `protobuf:"bytes,1,rep,name=securityRehabList" json:"securityRehabList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2C) Reset()         { *m = S2C{} }
func (m *S2C) String() string { return proto.CompactTextString(m) }
func (*S2C) ProtoMessage()    {}
func (*S2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_Qot_GetRehab_026e96b263c20288, []int{3}
}
func (m *S2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2C.Unmarshal(m, b)
}
func (m *S2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2C.Marshal(b, m, deterministic)
}
func (dst *S2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2C.Merge(dst, src)
}
func (m *S2C) XXX_Size() int {
	return xxx_messageInfo_S2C.Size(m)
}
func (m *S2C) XXX_DiscardUnknown() {
	xxx_messageInfo_S2C.DiscardUnknown(m)
}

var xxx_messageInfo_S2C proto.InternalMessageInfo

func (m *S2C) GetSecurityRehabList() []*SecurityRehab {
	if m != nil {
		return m.SecurityRehabList
	}
	return nil
}

type Request struct {
	C2S                  *C2S     `protobuf:"bytes,1,req,name=c2s" json:"c2s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_Qot_GetRehab_026e96b263c20288, []int{4}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetC2S() *C2S {
	if m != nil {
		return m.C2S
	}
	return nil
}

type Response struct {
	RetType              *int32   `protobuf:"varint,1,req,name=retType,def=-400" json:"retType,omitempty"`
	RetMsg               *string  `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ErrCode              *int32   `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	S2C                  *S2C     `protobuf:"bytes,4,opt,name=s2c" json:"s2c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_Qot_GetRehab_026e96b263c20288, []int{5}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

const Default_Response_RetType int32 = -400

func (m *Response) GetRetType() int32 {
	if m != nil && m.RetType != nil {
		return *m.RetType
	}
	return Default_Response_RetType
}

func (m *Response) GetRetMsg() string {
	if m != nil && m.RetMsg != nil {
		return *m.RetMsg
	}
	return ""
}

func (m *Response) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *Response) GetS2C() *S2C {
	if m != nil {
		return m.S2C
	}
	return nil
}

func init() {
	proto.RegisterType((*C2S)(nil), "Qot_GetRehab.C2S")
	proto.RegisterType((*Rehab)(nil), "Qot_GetRehab.Rehab")
	proto.RegisterType((*SecurityRehab)(nil), "Qot_GetRehab.SecurityRehab")
	proto.RegisterType((*S2C)(nil), "Qot_GetRehab.S2C")
	proto.RegisterType((*Request)(nil), "Qot_GetRehab.Request")
	proto.RegisterType((*Response)(nil), "Qot_GetRehab.Response")
	proto.RegisterEnum("Qot_GetRehab.CompanyAct", CompanyAct_name, CompanyAct_value)
}

func init() {
	proto.RegisterFile("Qot_GetRehab/Qot_GetRehab.proto", fileDescriptor_Qot_GetRehab_026e96b263c20288)
}

var fileDescriptor_Qot_GetRehab_026e96b263c20288 = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0x5d, 0x6f, 0xd3, 0x4a,
	0x10, 0xbd, 0x8e, 0x93, 0x26, 0x99, 0xa6, 0xad, 0xbb, 0x69, 0x7b, 0xad, 0xf4, 0xaa, 0xd7, 0xf2,
	0x95, 0xae, 0x22, 0x24, 0xd2, 0x62, 0xf1, 0x80, 0x78, 0x81, 0xc6, 0x50, 0x04, 0x02, 0x54, 0x36,
	0x7d, 0xaf, 0x1c, 0xef, 0x16, 0x8c, 0x12, 0x6f, 0xf0, 0x6e, 0x41, 0x7d, 0x83, 0x5f, 0xc1, 0x7f,
	0xe3, 0xd7, 0xa0, 0xd9, 0xf5, 0x77, 0xc5, 0x4b, 0xb2, 0xe7, 0x9c, 0x39, 0x33, 0xb3, 0xde, 0x19,
	0xf8, 0xf7, 0x83, 0x50, 0xd7, 0xaf, 0xb8, 0xa2, 0xfc, 0x53, 0xb4, 0x3c, 0xad, 0x83, 0xd9, 0x26,
	0x13, 0x4a, 0x90, 0x51, 0x9d, 0x9b, 0x8c, 0x43, 0xb1, 0x5e, 0x8b, 0xf4, 0xd4, 0xfc, 0x99, 0x90,
	0xc9, 0x31, 0x86, 0xe4, 0x42, 0x75, 0x34, 0xa2, 0xff, 0x0c, 0xec, 0x30, 0x58, 0x90, 0x27, 0x30,
	0x92, 0x3c, 0xbe, 0xcd, 0x12, 0x75, 0xf7, 0x36, 0x91, 0xca, 0xb5, 0x3c, 0x7b, 0xba, 0x1d, 0x1c,
	0xcc, 0x6a, 0xf1, 0x8b, 0x5c, 0xa7, 0x8d, 0x48, 0xff, 0x67, 0x0f, 0x7a, 0xba, 0x38, 0x21, 0xd0,
	0x55, 0xc9, 0x9a, 0xbb, 0x96, 0xd7, 0x99, 0x0e, 0xa9, 0x3e, 0x93, 0xff, 0x61, 0x37, 0x16, 0xeb,
	0x4d, 0x94, 0xde, 0x9d, 0xc7, 0xea, 0x62, 0x15, 0x7d, 0x74, 0x3b, 0x5e, 0x67, 0x6a, 0xd3, 0x16,
	0x4b, 0x4e, 0x00, 0x6e, 0xbe, 0xb1, 0x8b, 0x28, 0x56, 0x22, 0x3b, 0x77, 0x6d, 0xaf, 0x33, 0xb5,
	0x68, 0x8d, 0x69, 0xe8, 0x73, 0xb7, 0xdb, 0xd2, 0xe7, 0xa8, 0x2f, 0x2b, 0x7f, 0xcf, 0xe8, 0xcb,
	0x86, 0x7f, 0x59, 0xf9, 0xb7, 0x5a, 0xfa, 0x9c, 0xfc, 0x03, 0x43, 0xb9, 0x59, 0x25, 0x6a, 0x1e,
	0x49, 0xee, 0xf6, 0x3d, 0x6b, 0xda, 0xa3, 0x15, 0x41, 0x26, 0x30, 0xd0, 0xe0, 0x65, 0xa6, 0xdc,
	0x81, 0x16, 0x4b, 0x8c, 0xda, 0x67, 0x91, 0xa4, 0xda, 0x38, 0x34, 0x5a, 0x81, 0x89, 0x0b, 0x7d,
	0x3c, 0xa3, 0x0d, 0xb4, 0x54, 0x40, 0xac, 0xb7, 0x14, 0xe9, 0xad, 0xd4, 0xb6, 0x6d, 0x53, 0xaf,
	0x24, 0x30, 0xa7, 0x06, 0x68, 0x1c, 0x99, 0x9c, 0x05, 0x26, 0x3e, 0x8c, 0x54, 0x16, 0xa5, 0xf2,
	0x86, 0x67, 0xda, 0xbc, 0xa3, 0xf5, 0x06, 0x47, 0x3c, 0xd8, 0x2e, 0x30, 0xa6, 0xd8, 0xd5, 0x21,
	0x75, 0x0a, 0xeb, 0x47, 0xab, 0x95, 0x30, 0xf7, 0xdd, 0x33, 0xf5, 0x4b, 0x02, 0xeb, 0x6b, 0x80,
	0x66, 0xc7, 0xd4, 0x2f, 0x30, 0x7e, 0x49, 0x7d, 0xbe, 0xcc, 0x92, 0x98, 0xbb, 0xfb, 0x9e, 0x85,
	0x5f, 0xb2, 0x62, 0xf0, 0xce, 0x11, 0x63, 0x3a, 0x2f, 0x31, 0x77, 0xce, 0x21, 0x39, 0x82, 0xad,
	0x88, 0x31, 0xcc, 0x39, 0xd6, 0x42, 0x8e, 0x74, 0x35, 0xc6, 0x4c, 0xbe, 0x03, 0x9d, 0xaf, 0xc4,
	0xa8, 0xb1, 0xe4, 0x6b, 0xc2, 0x78, 0xca, 0xdc, 0x43, 0xa3, 0x15, 0x18, 0x3b, 0x91, 0x9b, 0x17,
	0x85, 0x7a, 0x64, 0x3a, 0xa9, 0x18, 0x5f, 0xc1, 0x4e, 0x39, 0xb3, 0x7a, 0x40, 0xcf, 0x60, 0x50,
	0x8c, 0xae, 0x1e, 0xd2, 0x3f, 0x0d, 0x78, 0x19, 0x45, 0x1e, 0xc1, 0x30, 0x43, 0xab, 0xde, 0x89,
	0x8e, 0xde, 0x89, 0xf1, 0xac, 0xb1, 0x85, 0xfa, 0x97, 0x56, 0x51, 0xfe, 0x25, 0xd8, 0x8b, 0x20,
	0x24, 0xaf, 0x61, 0x5f, 0xd6, 0x8b, 0xd7, 0xb6, 0xea, 0xb8, 0x99, 0xa1, 0xd1, 0x23, 0xbd, 0xef,
	0xf2, 0x67, 0xd0, 0xa7, 0xfc, 0xcb, 0x2d, 0x97, 0x8a, 0xfc, 0x07, 0x76, 0x1c, 0xc8, 0xbc, 0xf9,
	0xfd, 0x66, 0x9e, 0x30, 0x58, 0x50, 0x54, 0xfd, 0x1f, 0x16, 0x0c, 0x28, 0x97, 0x1b, 0x91, 0x4a,
	0x4e, 0x4e, 0xa0, 0x9f, 0x71, 0x75, 0x75, 0xb7, 0x31, 0x7b, 0xd9, 0x7b, 0xda, 0x7d, 0xf8, 0xf8,
	0xec, 0x8c, 0x16, 0x24, 0x3e, 0x4a, 0xc6, 0xd5, 0x3b, 0x89, 0x8b, 0x69, 0x4d, 0x87, 0x34, 0x47,
	0xf8, 0x8c, 0x3c, 0xcb, 0x42, 0xc1, 0xb8, 0x6b, 0x9b, 0x67, 0xcc, 0x21, 0xf6, 0x20, 0x83, 0xd8,
	0xed, 0x7a, 0xd6, 0xfd, 0x1e, 0x16, 0x41, 0x48, 0x51, 0x7d, 0xf0, 0xcb, 0x02, 0x08, 0xcb, 0x15,
	0x27, 0x63, 0xd8, 0xab, 0xd0, 0xf5, 0x7b, 0x91, 0x72, 0xe7, 0x2f, 0x72, 0x00, 0x4e, 0x8d, 0x5c,
	0xe0, 0x42, 0x39, 0x56, 0x2b, 0xf4, 0x8d, 0x48, 0x52, 0xa7, 0xd3, 0x0a, 0x9d, 0xe3, 0x2e, 0x38,
	0x5d, 0xf2, 0x37, 0x8c, 0x6b, 0xec, 0x55, 0x3e, 0xde, 0xce, 0xa0, 0x15, 0x7e, 0x8e, 0xc3, 0xe9,
	0x38, 0x84, 0xc0, 0x6e, 0x9d, 0x65, 0xcc, 0xf1, 0x5a, 0x29, 0x8a, 0xd1, 0x71, 0x9e, 0x93, 0x09,
	0x1c, 0xd6, 0x9b, 0xbb, 0x2c, 0xa5, 0xef, 0xd6, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xce, 0xa7,
	0xfb, 0xf1, 0x95, 0x05, 0x00, 0x00,
}
